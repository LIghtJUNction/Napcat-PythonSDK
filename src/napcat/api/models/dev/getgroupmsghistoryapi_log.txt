构建过程日志:
1. 移除了不必要的 `typing.Any` 和 `logging` 导入。
2. 添加 `from __future__ import annotations` 以支持 Pydantic v2 中的前向引用。
3. 根据 OpenAPI 规范，将 `message_id` 和 `group_id` 从自定义 `BaseModel` 类修改为直接的 `int | str` 类型，更准确地反映其在请求中的简单 ID 值。
4. 修复了 `GetGroupMsgHistoryReq` 中的 `count` 和 `reverseOrder` 字段，为其设置了 OpenAPI 中定义的默认值 (`20` 和 `False`)。
5. 重新组织并重命名了所有中文 `component_models` 类为英文驼峰命名法（如 `消息详情` -> `MessageDetail`，`文本消息` -> `TextMessage`），提高了可读性。
6. 为每个具体的“消息类型”（如 `TextMessage`, `AtMessage` 等）定义了嵌套的 `Data` 类，以准确匹配 OpenAPI 中 `data` 字段的结构。
7. `AtMessage` 中的 `qq` 字段类型更新为 `int | str | Literal["all"]` 以支持 OpenAPI 中的 `oneOf` 定义。
8. `ReplyMessage` 中的 `id` 字段类型更新为 `int | str`。
9. `ImageMessage` 中的 `summary` 字段设置了正确的默认值 `"[图片]"` 和描述。
10. `Sender` 模型中的 `sex` 和 `role` 字段类型更改为 `Literal` 类型，以表示枚举值，并正确处理其可选性。
11. 定义了 `MessageContent` 类型别名，它是一个联合类型 (`Union`)，包含了所有可能的消息内容类型，包括通过字符串前向引用 `"ForwardMessage"` 来解决循环依赖。
12. `ForwardMessage` 模型被正确定义，其 `Data` 类中的 `content` 字段使用 `list[MessageContent]` 类型。
13. `MessageDetail` 模型中的 `message` 字段现在使用 `list[MessageContent]` 类型，以包含所有可能的消息类型。
14. 修复了 `GetGroupMsgHistoryRes` 中 `status` 字段的类型为 `Literal["ok"]`，并为所有响应字段设置了根据 OpenAPI 规范推断的初始值或 `...`（表示必需）。
15. 确保了所有 Pydantic 字段都具有强制类型标注、描述信息。
16. 移除了原始代码中不再使用的 `result` 类，因为 `GetGroupMsgHistoryRes` 直接定义了完整的响应结构，更符合此 API 的具体响应。
17. 统一了 Field 的描述风格，保留了“xxx字段”的格式。