构建过程日志：
1. 移除了冗余的导入：移除了 `logging` 和 `Any`，因为它们在最终模型中不再需要。
2. 修正了 `user_id` 组件：根据 OpenAPI 规范，`user_id` 和 `friend_id` 应该是 `int | str` 类型，而不是一个复杂的对象。因此，移除了旧的 `user_id` 类，并在请求模型中直接使用 `int | str | None` 类型。
3. 移除了冗余的 `result` 组件：OpenAPI 响应直接定义了其结构，旧的 `result` 类不再适用。
4. 修复了 `DeleteFriendReq`：
    - `user_id` 和 `friend_id` 字段现在是 `int | str | None` 类型，并提供了描述和默认值 `None`，与 OpenAPI 规范中它们非必填的定义一致。
    - `temp_block` 和 `temp_both_del` 字段根据 OpenAPI 规范被标记为必填项 (未提供默认值使其成为必填)，并添加了描述。
5. 修复了 `DeleteFriendRes`：
    - `status` 字段的类型从 `str` 修改为 `Literal["ok"]`，并设置了默认值和描述。
    - `retcode` 字段类型保持 `float`，并设置了默认值 `0.0` 和描述。
    - `data` 字段被正确地定义为一个嵌套的 `Data` 类实例，使用 `default_factory=Data` 作为默认值，并添加了描述。
    - `message` 和 `wording` 字段设置了默认值 `""` 和描述。
    - `echo` 字段类型保持 `str | None`，并设置了默认值 `None` 和描述。
    - 嵌套的 `Data` 类中的 `result` 和 `errMsg` 字段根据 OpenAPI 规范设置为必填项，并添加了描述。
6. 确保了所有字段都有强制类型标注、描述和合适的初始值。
7. `model_config = {"extra": "allow"}` 保留以允许额外字段，符合原始代码意图。
8. 接口模型 `DeleteFriendAPI` 保持不变，因为它正确地引用了请求和响应模型。